<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfCustomControlLibrary.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/WpfCustomControlLibrary;component/Style/Icon.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/WpfCustomControlLibrary;component/Style/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="TabButton_Template" TargetType="{x:Type local:TabButton}">
        <!--Border 边框采RelativeSource绑定原始的-->
        <Border x:Name="border" Background="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Background}"
                Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Height}"
                CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CornerRadius}"
                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Width="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Width}">

            <!--按键内容定义-->
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                <!--第一 增加图标-->
                <TextBlock x:Name="icon" Margin="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconMargin}"
                           RenderTransformOrigin="0.5, 0.5" Style="{StaticResource Icon}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MusicIcon}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=IconSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}">
                    <TextBlock.RenderTransform>
                        <!--实现动画旋转-->
                        <RotateTransform x:Name="transIcon" Angle="0"></RotateTransform>
                    </TextBlock.RenderTransform>
                </TextBlock>
                <!--第二 增加文本内容-->
                <TextBlock VerticalAlignment="Center" x:Name="txt"
                           TextDecorations="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentDecorations}"
                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                           FontSize="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=FontSize}"
                           Foreground="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Foreground}"/>
            </StackPanel>
        </Border>

        <ControlTemplate.Triggers>
            <!--设置鼠标进入背景前景-->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverBackground}" TargetName="border"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}" TargetName="icon"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=MouseOverForeground}" TargetName="txt"></Setter>
            </Trigger>
            <!--设置鼠标点击前景背景-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedBackground}" TargetName="border"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedForeground}" TargetName="icon"></Setter>
                <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=CheckedForeground}" TargetName="txt"></Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!--条件-->
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="AllowsAnimation" Value="true"/>
                </MultiTrigger.Conditions>
                <!--进入翻转-->
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Angle" To="180" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <!--移除时翻转回去-->
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="transIcon" Storyboard.TargetProperty="Anlge" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <!--按键样式-->
    <Style x:Key="DefaultTabButtonStyle" TargetType="{x:Type local:TabButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonForeground}"/>
        <Setter Property="MouseOverBackground" Value="{StaticResource ButtonMouseOverBackground}"/>
        <Setter Property="MouseOverForeground" Value="{StaticResource ButtonMouseOverForeground}"/>
        <Setter Property="CheckedForeground" Value="{StaticResource ButtonCheckedForeground}"/>
        <Setter Property="CheckedBackground" Value="{StaticResource TwoColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="IconSize" Value="12"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Padding" Value="15, 2, 15, 2"/>
        <!--15, 5, 15, 2-->
        <Setter Property="Content" Value="{x:Null}"/>
        <Setter Property="IconMargin" Value="0, 0, 10, 0"/>
        <Setter Property="AllowsAnimation" Value="False"/>
        <Setter Property="CornerRadius" Value="0"/>
        <!--设置光标形状-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource TabButton_Template}"/>
    </Style>

    <Style TargetType="{x:Type local:TabButton}" BasedOn="{StaticResource DefaultTabButtonStyle}"/>
</ResourceDictionary>